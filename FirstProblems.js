/*
1_
If we list all the natural numbers below 10 that are
multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000.
*/

// let arr = [];
// let sum = 0;
// for (let i = 0; i < 1000; i++) {
//     if (i % 3 === 0 && i !== 0 || i % 5 === 0 && i !== 0) {
//         arr.push(i);
//         sum += i;
//     }
// }
// console.log(sum);
// rank waws 967865



/*
2_
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
*/

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
// let num1 = 0, num2 = 1, next;
// let sum = 0;
// for (let i = 1; i <= 4000000; i++) {
//     while (num2 <= 4000000) {
//         if (num2 % 2 === 0) {
//             sum += num2;
//         }
//         next = num1 + num2;
//         num1 = num2;
//         num2 = next;
//     }
// }
// console.log(sum);

// difficulty rating 5%
// rank was 771902

/* 
3_
The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ?
*/

// const getPrimeFactors = (int) => {
//     const primeArray = [];
//     let isPrime;

//     // find divisors starting with 2
//     for (let i = 2; i <= int; i++) {
//         if (int % i !== 0) continue;

//         // check if divisor is prime
//         for (let j = 2; j <= i/2; j++) {
//             isPrime = i % j !== 0;
//         }

//         if (!isPrime) continue;

//         // if divisor is prime, divide int by number and store
//         int /= i;
//         primeArray.push(i);
//     }
//     return primeArray;
// }

// console.log(getPrimeFactors(13195).join(', '));

// rank 555154th difficulty 5%

/* 
4_
A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 Ã— 99.

Find the largest palindrome made from the product of two 3-digit numbers. */

// const arr = [];
// for (let i = 100; i < 1000; i++) {
//     for (j = 100; j < 1000; j++) {
//         num = i * j;
//         reversed = parseInt(num
//             .toString()
//             .split('')
//             .reverse()
//             .join(''))
//         if (num === reversed) {
//             arr.push(num);
//         }
//     }
// }

/** problem 5) 2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.

What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20? 
232792560 ; 494665th person
*/

// const arr = [];
// let i = 1;
// while (i < Infinity) {
//     if (i % 1 === 0 && i % 2 === 0 && i % 3 === 0 && i % 4 === 0 && i % 5 === 0 && i % 6 === 0 && i % 7 === 0 && i % 8 === 0 && i % 9 === 0 && i % 10 === 0 && i % 11 === 0 && i % 12 === 0 && i % 13 === 0 && i % 14 === 0 && i % 15 === 0 && i % 16 === 0 && i % 17 === 0 && i % 18 === 0 && i % 19 === 0 && i % 20 === 0) {
//         arr.push(i);
//         break;
//     }
//     i = i + 1;
// }


/** Problem 6) The sum of the squares of the first ten natural numbers is,
"1 squared plus 2 squared plus ... ten squared equals 285"

The square of the sum of the first ten natural numbers is,
(1+2+...+10)**2 = 55**2 = 3025

Hence the difference between the sum of the squares of the first ten natural numbers and the square of the sum is .
3025-385-2640

Find the difference between the sum of the squares of the first one hundred natural numbers and the square of the sum. 
25164150, 497669th person , difficulty 5%
*/

// let sum = 0;
// for (let i = 1; i <= 100; i++) {
//     sum += i**2;
// }
// let sum2 = 0;
// for (let i = 1; i <= 100; i++) {
//     sum2 += i; 
// }
// square = sum**2;
// let diff = square - sum;

/** Problem 7) By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see that the 6th prime is 13.

What is the 10 001st prime number? */

const isPrime = (num) => {
    for (let i = 2; i * i <= num; i++)
        if (num % i === 0)
          return false; 
    return num > 1;
}

const arr = [];
for (let i = 2; arr[i] < arr[10002]; i++) {
    if (isPrime(i)) {
        arr.push(i);
    }
}
console.log(arr);