/*
1_
If we list all the natural numbers below 10 that are
multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000.
*/

// let arr = [];
// let sum = 0;
// for (let i = 0; i < 1000; i++) {
//     if (i % 3 === 0 && i !== 0 || i % 5 === 0 && i !== 0) {
//         arr.push(i);
//         sum += i;
//     }
// }
// console.log(sum);
// rank waws 967865



/*
2_
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
*/

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
// let num1 = 0, num2 = 1, next;
// let sum = 0;
// for (let i = 1; i <= 4000000; i++) {
//     while (num2 <= 4000000) {
//         if (num2 % 2 === 0) {
//             sum += num2;
//         }
//         next = num1 + num2;
//         num1 = num2;
//         num2 = next;
//     }
// }
// console.log(sum);

// difficulty rating 5%
// rank was 771902

/* 
3_
The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ?
*/

const getPrimeFactors = (int) => {
    const primeArray = [];
    let isPrime;

    // find divisors starting with 2
    for (let i = 2; i <= int; i++) {
        if (int % i !== 0) continue;

        // check if divisor is prime
        for (let j = 2; j <= i/2; j++) {
            isPrime = i % j !== 0;
        }

        if (!isPrime) continue;

        // if divisor is prime, divide int by number and store
        int /= i;
        primeArray.push(i);
    }
    return primeArray;
}

console.log(getPrimeFactors(13195).join(', '));