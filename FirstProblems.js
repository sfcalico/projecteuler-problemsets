/*
1_
If we list all the natural numbers below 10 that are
multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000.
*/

// let arr = [];
// let sum = 0;
// for (let i = 0; i < 1000; i++) {
//     if (i % 3 === 0 && i !== 0 || i % 5 === 0 && i !== 0) {
//         arr.push(i);
//         sum += i;
//     }
// }
// console.log(sum);
// rank waws 967865



/*
2_
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
*/

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
// let num1 = 0, num2 = 1, next;
// let sum = 0;
// for (let i = 1; i <= 4000000; i++) {
//     while (num2 <= 4000000) {
//         if (num2 % 2 === 0) {
//             sum += num2;
//         }
//         next = num1 + num2;
//         num1 = num2;
//         num2 = next;
//     }
// }
// console.log(sum);

// difficulty rating 5%
// rank was 771902

/* 
3_
The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ?
*/

// const getPrimeFactors = (int) => {
//     const primeArray = [];
//     let isPrime;

//     // find divisors starting with 2
//     for (let i = 2; i <= int; i++) {
//         if (int % i !== 0) continue;

//         // check if divisor is prime
//         for (let j = 2; j <= i/2; j++) {
//             isPrime = i % j !== 0;
//         }

//         if (!isPrime) continue;

//         // if divisor is prime, divide int by number and store
//         int /= i;
//         primeArray.push(i);
//     }
//     return primeArray;
// }

// console.log(getPrimeFactors(13195).join(', '));

// rank 555154th difficulty 5%

/* 
4_
A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 × 99.

Find the largest palindrome made from the product of two 3-digit numbers. */

// const arr = [];
// for (let i = 100; i < 1000; i++) {
//     for (j = 100; j < 1000; j++) {
//         num = i * j;
//         reversed = parseInt(num
//             .toString()
//             .split('')
//             .reverse()
//             .join(''))
//         if (num === reversed) {
//             arr.push(num);
//         }
//     }
// }

/** problem 5) 2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.

What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20? 
232792560 ; 494665th person
*/

// const arr = [];
// let i = 1;
// while (i < Infinity) {
//     if (i % 1 === 0 && i % 2 === 0 && i % 3 === 0 && i % 4 === 0 && i % 5 === 0 && i % 6 === 0 && i % 7 === 0 && i % 8 === 0 && i % 9 === 0 && i % 10 === 0 && i % 11 === 0 && i % 12 === 0 && i % 13 === 0 && i % 14 === 0 && i % 15 === 0 && i % 16 === 0 && i % 17 === 0 && i % 18 === 0 && i % 19 === 0 && i % 20 === 0) {
//         arr.push(i);
//         break;
//     }
//     i = i + 1;
// }


/** Problem 6) The sum of the squares of the first ten natural numbers is,
"1 squared plus 2 squared plus ... ten squared equals 285"

The square of the sum of the first ten natural numbers is,
(1+2+...+10)**2 = 55**2 = 3025

Hence the difference between the sum of the squares of the first ten natural numbers and the square of the sum is .
3025-385-2640

Find the difference between the sum of the squares of the first one hundred natural numbers and the square of the sum. 
25164150, 497669th person , difficulty 5%
*/

// let sum = 0;
// for (let i = 1; i <= 100; i++) {
//     sum += i**2;
// }
// let sum2 = 0;
// for (let i = 1; i <= 100; i++) {
//     sum2 += i; 
// }
// square = sum**2;
// let diff = square - sum;

/** Problem 7) By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see that the 6th prime is 13.

What is the 10 001st prime number? 426003rd person, difficulty was 5%*/

// const isPrime = (num) => {
//     for (let i = 2; i * i <= num; i++)
//         if (num % i === 0)
//           return false; 
//     return num > 1;
// }

// const arr = [];
// for (let i = 2; arr.length < 10001; i++) {
//     if (isPrime(i)) {
//         arr.push(i);
//     }
// }
// console.log(arr);

/** Problem 8 
 * The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.

73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450

Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?
*/

// let numberArray = Array.from("7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450");
// numberArray[0] 

// let product = 0;
// for (let i = 0; i < numberArray.length; i++) {
//     if (numberArray[i]*numberArray[i+1]*numberArray[i+2]*numberArray[i+3]*numberArray[i+4]*numberArray[i+5]*numberArray[i+6]*numberArray[i+7]*numberArray[i+8]*numberArray[i+9]*numberArray[i+10]*numberArray[i+11]*numberArray[i+12] > product) {
//         product = i;
//     }   
// }
// 3 6 2 6 9 5 6 1 8 8 2 6 7 = 313528320

// For example, 32 + 42 = 9 + 16 = 25 = 52.

// There exists exactly one Pythagorean triplet for which a + b + c = 1000.
// Find the product abc.

/**Problem 10)
 * The sum of the primes below 10 is 2 + 3 + 5 + 7 = 17.

Find the sum of all the primes below two million.

331784th difficulty 5%
 */

// const isPrime = (num) => {
//     for (let i = 2; i * i <= num; i++)
//         if (num % i === 0)
//           return false; 
//     return num > 1;
// }
// let sum = 0;
// let i = 0;
// while (i < 10) {
//     if (isPrime(i)) {
//         sum += i;
//     }
//     i++;
// }


/**Problem 14)
 * The following iterative sequence is defined for the set of positive integers:

n → n/2 (n is even)
n → 3n + 1 (n is odd)

Using the rule above and starting with 13, we generate the following sequence:

13 → 40 → 20 → 10 → 5 → 16 → 8 → 4 → 2 → 1
It can be seen that this sequence (starting at 13 and finishing at 1) contains 10 terms. Although it has not been proved yet (Collatz Problem), it is thought that all starting numbers finish at 1.

Which starting number, under one million, produces the longest chain?

NOTE: Once the chain starts the terms are allowed to go above one million.
 */
const array = [];
const iterate = n => {
    if (n === 1) {
        array.push(n);
        return array.length;
    }
    if (n % 2 === 0) {
        array.push(n);
        return iterate(n/2);
    } else {
        array.push(n);
        return iterate(3*n+1);
    }

}